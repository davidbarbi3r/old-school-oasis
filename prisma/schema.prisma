// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  local
  discord
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userName String
  email String @unique
  hash String? 
  authProvider AuthProvider @default(local)
  isActive Boolean @default(true)
  collections Collection[]

  @@map("users") // this is the name of the table in the database
}

model Collection {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  description String

  userId Int
  user User @relation(fields: [userId], references: [id])

  games GameItem[]
  @@map("collections")
}

model Game {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  description String
  
  platformId Int
  platform Platform @relation(fields: [platformId], references: [id])

  GameItem GameItem[]
  
  @@map("games") // this is the name of the table in the database
}

model Platform {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  description String

  games Game[]
}

model GameItem {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameId Int
  game Game @relation(fields: [gameId], references: [id])

  collectionId Int
  collection Collection @relation(fields: [collectionId], references: [id])

  stateId Int
  state State @relation(fields: [stateId], references: [id])

  @@map("game_items") // this is the name of the table in the database
}

model State {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  description String

  games GameItem[]
}



